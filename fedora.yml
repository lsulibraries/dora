- hosts: all
  become: yes

  gather_facts: false
  pre_tasks:
    - name: 'install python2'
      raw: sudo apt-get -y install python python-simplejson
    - action: setup # https://stackoverflow.com/a/40790418/3294778


  vars:
    auth_filter_fedora_version: 3.8.1
    mysql_login_host: localhost
    tomcat_user: tomcat7
    tomcat_extra_opts: ""

  # roles:
  #   - java8
  #   - ansible-tomcat7
  #   # - ansible-role-fcrepo

  tasks:
  - apt:
      name: "{{ item }}"
    with_items:
      - default-jdk
      - tomcat7-admin
      - tomcat7
      - git

###################### begin try to skip java8 and dedicated ansible role for tomcat7

  # Installing Packages
  - name: Install Tomcat7 (Ubuntu)
    apt: pkg={{ item }} state=latest
    with_items:
      - tomcat7
      - libtcnative-1
      - libapr1
    when: ansible_distribution == 'Ubuntu'

  - name: Install Tomcat7 (Debian)
    apt: pkg={{ item }} state=latest
    with_items:
      - tomcat7
    when: ansible_distribution == 'Debian'

  - name: Install Tomcat7 (Amazon Linux)
    yum: pkg={{ item }} state=latest
    with_items:
      - tomcat7
      - tomcat-native
    when: ansible_distribution == 'Amazon'

  # Creating Tomcat Symlinks
  - name: Symlink to /usr/local/tomcat
    file: dest=/usr/local/tomcat state=link src=/var/lib/tomcat7
    when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'

  - name: Symlink to /usr/local/tomcat
    file: dest=/usr/local/tomcat state=link src=/usr/share/tomcat7
    when: ansible_distribution == 'Amazon'

  # Setting Deploy Directory File Permissions
  - name: Set Tomcat Deployment Directory Permissions
    file: dest=/usr/local/tomcat/webapps state=directory owner={{ tomcat_user }}  group={{ tomcat_user }}  mode=0775
    when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'

  # Creating missing symlinks
  # https://bugs.launchpad.net/ubuntu/+source/tomcat7/+bug/1232258
  - name: Create missing symlink
    file:
      path: /usr/share/tomcat7/shared
      src: /var/lib/tomcat7/shared/
      state: link

  - name: Create missing symlink
    file:
      path: /usr/share/tomcat7/server
      src: /var/lib/tomcat7/server/
      state: link

  - name: Create missing symlink
    file:
      path: /usr/share/tomcat7/common
      src: /var/lib/tomcat7/common/
      state: link

  # Creating Service Configuration
  - name: Configuring Tomcat Service (Ubuntu / Debian)
    template: src=tomcat7.j2 dest=/etc/default/tomcat7 owner=root group=root mode=0644
    notify: restart_tomcat
    when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'

  - name: Configuring Tomcat Service (Amazon)
    template: src=tomcat7.conf.j2 dest=/etc/tomcat7/tomcat7.conf owner={{ tomcat_user }}  group={{ tomcat_user }}  mode=644
    notify: restart_tomcat
    when: ansible_distribution == 'Amazon'

  - name: Enable Tomcat Service
    service: name=tomcat7 enabled=yes

##################################### end tomcat role replacement


  # - name: Get mysql python lib
  #   apt:
  #     name: python-mysqldb

  - name: Setup fedora_home_link_target
    file:
      path: "{{ fedora_home_link_target }}"
      state: directory
      owner: tomcat7
      group: tomcat7
      mode: 0755

  - name: Setup $FEDORA_HOME
    file:
      state: link
      src: "{{ fedora_home_link_target }}"
      path: "{{ fedora_home }}"
      owner: tomcat7
      group: tomcat7
      mode: 0755

  - name: Setup $FEDORA_HOME env var
    lineinfile:
      dest: /etc/environment
      line: "FEDORA_HOME={{ fedora_home }}"
      insertafter: EOF

  - name: Copy fedora src
    copy:
      src: files/fcrepo-installer-3.8.1.jar
      dest: "{{ work_dir }}"

    # TODO move src from ../templates to ../files
  - name: Copy install.properties to host
    template:
      src: ../templates/install.properties
      dest: "{{ work_dir }}"

  - name: Run fcrepo jar installer
    shell: "java -jar {{ work_dir }}fcrepo-installer-{{ fedora_version }}.jar {{ work_dir }}/install.properties"
    args:
      creates: /var/lib/tomcat7/webapps/fedora.war

  - name: Update fcrepo war ownership
    file:
      path: /var/lib/tomcat7
      owner: tomcat7
      group: tomcat7
      recurse: true

  - name: Ensure $FEDORA_HOME ownership
    file:
      path: "{{ fedora_home_link_target }}"
      owner: tomcat7
      group: tomcat7
      follow: yes
      recurse: yes

  - name: Begin removing unneeded XACML
    file:
      state: absent
      path: "{{ fedora_home }}/data/fedora-xacml-policies/repository-policies/default/{{ item }}"
    with_items:
      - deny-inactive-or-deleted-objects-or-datastreams-if-not-administrator.xml
      - deny-policy-management-if-not-administrator.xml
      - deny-unallowed-file-resolution.xml
      - deny-purge-datastream-if-active-or-inactive.xml
      - deny-purge-object-if-active-or-inactive.xml
      - deny-reloadPolicies-if-not-localhost.xml
      - deny-reloadPolicies-if-not-localhost.xml

    # TODO - this is not idempotent once files get deleted; using 'force' for now
    # git clone https://github.com/Islandora/islandora-xacml-policies.git islandora
  - name: clone Islandora XACML
    git:
      repo: https://github.com/Islandora/islandora-xacml-policies.git
      dest: "{{ fedora_home }}/data/fedora-xacml-policies/repository-policies/islandora"
      force: yes

  - name: ensure tomcat7 ownership of the xacml we just cloned
    file:
      path: "{{ fedora_home }}/data/fedora-xacml-policies"
      state: directory
      recurse: yes
      owner: tomcat7
      group: tomcat7

  - name: remove unneeded Islandora XACML
    file:
      state: absent
      path: "{{ fedora_home_link_target }}/data/fedora-xacml-policies/repository-policies/islandora/{{ item }}"
    with_items:
      - permit-apim-to-anonymous-user.xml
      - permit-upload-to-anonymous-user.xml

  - name: Tomcat restart
    service:
      name: tomcat7
      state: restarted


  - name: get Drupal auth filter from github
    get_url:
      url: "https://github.com/islandora/islandora_drupal_filter/releases/download/7.1.12/fcrepo-drupalauthfilter-{{ auth_filter_fedora_version }}.jar"
      dest: "/var/lib/tomcat7/webapps/fedora/WEB-INF/lib/fcrepo-drupalauthfilter-{{ auth_filter_fedora_version }}.jar"
      owner: tomcat7
      group: tomcat7

  - name: wait for fedora deployment (from the restart, above).
    wait_for:
      path: /var/lib/tomcat7/webapps/fedora/WEB-INF/lib/
      state: present

  - name: set drupal auth permissions
    file:
      path: "/var/lib/tomcat7/webapps/fedora/WEB-INF/lib/fcrepo-drupalauthfilter-{{ auth_filter_fedora_version }}.jar"
      owner: tomcat7
      group: tomcat7

  - name: copy jaas.conf
    template:
      src: templates/jaas.conf
      dest: "{{ fedora_home }}/server/config/"

  - name: copy filter-drupal
    template:
      src: templates/filter-drupal.xml
      dest: "{{ fedora_home }}/server/config/"

  - name: copy logging properties for fedora
    copy:
      src: files/logging.properties
      dest: /var/lib/tomcat7/webapps/fedora/WEB-INF/classes

  - wait_for:
      path: "{{ fedora_home_link_target }}/data/fedora-xacml-policies/repository-policies/default/deny-apim-if-not-localhost.xml"
      state: present

  - name: ensure that frontend can use api-m
    lineinfile:
      line: '<AttributeValue DataType="http://www.w3.org/2001/XMLSchema#string">{{ frontend_ip }}</AttributeValue>'
      insertafter: '<AttributeValue DataType="http://www.w3.org/2001/XMLSchema#string">0:0:0:0:0:0:0:1</AttributeValue>'
      path: "{{ fedora_home_link_target }}/data/fedora-xacml-policies/repository-policies/default/deny-apim-if-not-localhost.xml"

  - name: Tomcat restart
    service:
      name: tomcat7
      state: restarted
