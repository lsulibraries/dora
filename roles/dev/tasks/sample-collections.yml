#########################################################################
#### Ingest a handful of sample collections, as defined in all.yml.  ####
####                                                                 ####
#### This play skips unless 'ingest_sample collections' is true.     ####
#########################################################################

- name: "Check for collections that we've already downloaded."
  stat:
    path: "/tmp/{{ item.filename }}"
  with_items: "{{ s3_collections }}"
  register: collections

- name: Download collections
  get_url:
    url: "https://s3-us-west-2.amazonaws.com/lsulibraries-sample-collections/{{item.1.filename}}"
    dest: "/tmp/{{ item.1.filename }}"
  with_together:
    - "{{ collections.results }}"
    - "{{ s3_collections }}"
  when: not item.0.stat.exists
  
- name: ensure ingest semaphore file exists
  file:
    path: /opt/ingested
    state: touch
  
- name: Get record of ingested items.
  shell: cat /opt/ingested
  register: ingested

- wait_for:
    host: localhost
    port: 8080

- name: Create collection containers (parents).
  command: "drush  --user=admin islandora-utils-create-collection --description='{{ item.description }}' --namespace={{ item.namespace }}:collection --parent=islandora:root --title='{{ item.title }}'"
  args:
    chdir: "{{ drupal_core_path }}"
  with_items: "{{ s3_collections }}"

- name: Publish collections.
  command: "drush islandora-collection-toggle-publish-set publish --pid={{ item.namespace }}:collection"
  args:
    chdir: "{{ drupal_core_path }}"
  with_items: "{{ s3_collections }}"

- name: Unzip cpd.zips. // this is a workaround until cpd_batch takes .zips
  unarchive:
    src: "/tmp/{{ item.filename }}"
    dest: "/tmp/"
    remote_src: yes
  with_items: "{{ s3_collections }}"

- name: Ingest (simple).
  shell: "drush --user=admin islandora_batch_scan_preprocess --content_models='{{ item.cmodels }}' --parent={{ item.namespace }}:collection --parent_relationship_pred=isMemberOfCollection --type={{ item.type }} --scan_target=/tmp/{{ item.filename }} --namespace={{ item.namespace }} && drush -u 1 ibi && echo '{{ item.filename }} ' >> /opt/ingested"
  args:
    chdir: "{{ drupal_core_path }}"
  with_items: "{{ s3_collections }}"
  when: "'{{ item.filename }}' not in ingested.stdout and not {{ item.cpd }}"

- name: ensure that islandora_batch is enabled.
  command: drush en -y islandora_batch
  args:
    chdir: "{{ drupal_core_path }}"


- name: create fresh structure files
  shell: "cd {{ drupal_core_path }}/sites/all/modules/islandora_compound_batch/extras/scripts && php create_structure_files.php /tmp/{{ item.dirname }}"
  with_items: "{{ s3_collections }}"
  when: "{{ item.cpd }}"

- name: Ingest (cpd).
  shell: "drush islandora_compound_batch_preprocess -u 1 --scan_target=/tmp/{{ item.dirname }} --parent={{ item.namespace }}:collection --namespace={{ item.namespace }}  && drush -u 1 ibi && echo '{{ item.filename }} ' >> /opt/ingested"
  args:
    chdir: "{{ drupal_core_path }}"
  with_items: "{{ s3_collections }}"
  when: "'{{ item.filename }}' not in ingested.stdout and {{ item.cpd }}"

- name: Create embargo list.
  command: drush iipeadd --low=130.39.0.0 --high=130.39.255.255 --list=lsu-wired
  args:
    chdir: "{{ drupal_core_path }}"

- name: Make a pids list.
  command: drush islandora-utils-get-pids-for-collection --collection=lsu-hpl:collection --outfile=/tmp/lsu-hpl.pids
  args:
    chdir: "{{ drupal_core_path }}"

- name: Set embargo from pids list.
  command: drush islandora-ip-embargo-set-embargo --pidsfile=/tmp/lsu-hpl.pids --list=lsu-wired
  args:
    chdir: "{{ drupal_core_path }}"
