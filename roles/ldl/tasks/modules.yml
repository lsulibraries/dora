# modules.yml

#########################################################################
#### Clone, drush dl, drush en, drush dis drupal modules.            ####
####                                                                 ####
#### This play relies totally on the variables set in all.yml.       ####
#########################################################################

- name: Set maintenance mode.
  command: drush vset --exact maintenance_mode 1
  args:
    chdir: "{{ drupal_core_path }}"

- name: Update islandora core modules with versions 7.x-y.z
  git:
    dest: '{{drupal_core_path}}{{ item.dest }}'
    force: true
    repo: "{{ item.repo }}"
    version: "{{ islandora_core_version }}"
  with_items: "{{ islandora_core_modules }}"
  when: update_islandora_core

- name: update islandora 7.x core modules
  git:
    dest: '{{drupal_core_path}}{{ item.dest }}'
    force: true
    repo: "{{ item.repo }}"
    version: 7.x
  with_items: "{{ islandora_modules_7x_only }}"
  when: update_islandora_core

- name: update ldl modules
  git:
    accept_hostkey: true
    dest: '{{drupal_core_path}}{{ item.dest }}'
    force: true
    repo: "{{ lsulibraries_gh_protocol }}lsulibraries/{{ item.repo }}"
    version: "{{ ldl_module_version }}"
  with_items: "{{ lsulibraries_original_modules }}"

- name: update ldl forks
  git:
    accept_hostkey: true
    dest: '{{drupal_core_path}}{{ item.dest }}'
    force: true
    repo: "{{ lsulibraries_gh_protocol }}lsulibraries/{{ item.repo }}"
    version: "{{ ldl_module_version }}"
  with_items: "{{ lsulibraries_forks }}"

- name: Get other tracked modules.
  git:
    dest: '{{drupal_core_path}}{{ item.dest }}'
    force: true
    repo: "{{ item.repo }}"
    version: "{{ item.version }}"
  with_items: "{{ other_modules }}"

- name: Download drupal contribs.
  command: "drush dl -y {{ item }}"
  args:
    chdir: '{{ drupal_core_path }}'
  with_items: "{{ drush_dl }}"

- name: remove old submod block_setting_ldl_theme
  file:
    path: "{{ drupal_core_path }}/sites/all/modules/islandora-features/block_setting_ldl_theme"
    state: absent

## Because islandora solution packs will fail installation if fedora is not yet online.
- wait_for:
    host: localhost
    port: 8080
  when: environment_type == 'dev'

- name: Enable modules.
  command: "drush -u 1 -y en {{ item }}"
  args:
    chdir: "{{ drupal_core_path }}"
  with_items: "{{ modules_to_enable }}"

- name: Disable unsued modules.
  command: "drush dis -y {{ item }}"
  args:
    chdir: '{{ drupal_core_path }}'
  with_items: "{{ modules_to_disable }}"

- name: updatedb after [potentially] new module/version installation.
  command: drush updatedb -y
  args:
    chdir: "{{ drupal_core_path }}"
  when: update_drupal_db

- name: install deps with composer for RR
  command: composer install
  args:
    chdir: "{{ drupal_core_path }}/sites/all/modules/islandora_solution_pack_remote_resource/modules/islandora_remote_resource_batch"

- name: Clear maintenance mode.
  command: "{{ item }}"
  args:
    chdir: "{{ drupal_core_path }}"
  with_items:
    - drush core-cron
    - drush cc all
    - drush vset --exact maintenance_mode 0

# - name: Disable modules before uninstalling
#   shell: "drush dis -y {{ item }}"
#   args:
#     chdir: "{{ drupal_core_path }}"
#   with_items: "{{ modules_to_uninstall }}"
#
# - name: Unistall modules
#   shell: "drush pm-uninstall -y {{ item }}"
#   args:
#     chdir: "{{ drupal_core_path }}"
#   with_items: "{{ modules_to_uninstall }}"
#
# - name: Delete modules
#   file:
#     path: "{{ drupal_core_path }}{{ item }}"
#     state: absent
#   with_items: "{{ module_paths_to_delete }}"
